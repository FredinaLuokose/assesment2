<!--from odoo import fields, models, api-->
<!--from odoo.exceptions import UserError-->

<!--class AccountMove(models.Model):-->
<!--    _inherit = "account.move"-->

<!--    delivery_count = fields.Integer(string='Delivery Orders', compute='_compute_picking')-->

<!--    def action_create_picking(self):-->
<!--        # Fetch the picking type; change the XML ID if necessary-->
<!--        picking_type = self.env.ref('stock.picking_type_out')  # Ensure this ref is correct-->
<!--        if not picking_type:-->
<!--            raise UserError('Picking type not found')-->

<!--        # Create the picking record-->
<!--        picking = self.env["stock.picking"].create({-->
<!--            "partner_id": self.partner_id.id,-->
<!--            "scheduled_date": self.invoice_date,  # Ensure this field is defined in stock.picking-->
<!--            "date_deadline": self.invoice_date_due,-->
<!--            "origin": self.name,-->
<!--            "move_type": "direct",  # Set the picking type-->
<!--            "picking_type_id": picking_type.id,-->
<!--            "location_id": self.env.ref('stock.stock_location_stock').id,  # Example source location-->
<!--            "location_dest_id": self.partner_id.property_stock_customer.id,  # Example destination location-->
<!--        })-->

<!--        # Create stock moves related to this picking-->
<!--        StockMove = self.env["stock.move"]-->
<!--        for line in self.invoice_line_ids:-->
<!--            StockMove.create({-->
<!--                "name": line.name,-->
<!--                "date": line.date,-->
<!--                "product_uom": line.product_id.uom_id.id,-->
<!--                "picking_id": picking.id,-->
<!--                "product_id": line.product_id.id,  # Unit of Measure-->
<!--                "location_id": self.env.ref('stock.stock_location_stock').id,  # Source location-->
<!--                "location_dest_id": self.partner_id.property_stock_customer.id,  # Destination location-->
<!--            })-->

<!--        # Create vendor bills based on invoice details-->
<!--        self.create_vendor_bills()-->

<!--        return picking-->

<!--    @api.depends('invoice_line_ids')  # Update to depend on invoice lines-->
<!--    def _compute_picking(self):-->
<!--        for order in self:-->
<!--            # Count the related pickings-->
<!--            pickings = self.env['stock.picking'].search([('origin', '=', order.name)])-->
<!--            order.delivery_count = len(pickings)-->

<!--    def create_vendor_bills(self):-->
<!--        for line in self.invoice_line_ids:-->
<!--            # Create a vendor bill for each invoice line-->
<!--            self.env['account.move'].create({-->
<!--                'move_type': 'in_invoice',  # Change to 'in_invoice' for vendor bills-->
<!--                'partner_id': self.partner_id.id,-->
<!--                'invoice_line_ids': [(0, 0, {-->
<!--                    'product_id': line.product_id.id,-->
<!--                    'quantity': line.quantity,-->
<!--                    'price_unit': line.price_unit,-->
<!--                    'name': line.name,-->
<!--                })],-->
<!--                'invoice_date': self.invoice_date,-->
<!--                'invoice_date_due': self.invoice_date_due,-->
<!--                'currency_id': self.currency_id.id,-->
<!--            })-->

<!--    def action_view_delivery(self):-->
<!--        # Return an action to view the related pickings-->
<!--        return {-->
<!--            "name": "Delivery",-->
<!--            "type": "ir.actions.act_window",-->
<!--            "res_model": "stock.picking",-->
<!--            "view_mode": "tree,form",-->
<!--            "domain": [('origin', '=', self.name)],-->
<!--        }-->


<!--<odoo>-->
<!--  <record id="view_move_form_create_picking" model="ir.ui.view">-->
<!--    <field name="name">view.move.form.inherit.create.picking</field>-->
<!--    <field name="model">account.move</field>-->
<!--    <field name="inherit_id" ref="account.view_move_form"/>-->
<!--    <field name="arch" type="xml">-->
<!--      <xpath expr="//button[@name='action_register_payment']" position="after">-->
<!--        <button name="action_create_picking" id="account_invoice_picking_btn"-->
<!--                type="object" class="oe_highlight"-->
<!--                invisible="state != 'posted' or payment_state not in ('not_paid', 'partial') or move_type not in ('out_invoice', 'out_refund', 'in_invoice', 'in_refund', 'out_receipt', 'in_receipt')"-->
<!--                context="{'dont_redirect_to_payments': True, 'display_account_trust': True}"-->
<!--                string="Create Picking" data-hotkey="g"-->
<!--                groups="account.group_account_invoice"/>-->
<!--      </xpath>-->
<!--      <div name="button_box" position="inside">-->
<!--        <button class="oe_stat_button" type="object" name="action_view_delivery"-->
<!--                icon="fa-truck" invisible="delivery_count == 0 or state != 'posted' or payment_state not in ('not_paid', 'partial') or move_type not in ('out_invoice', 'out_refund', 'in_invoice', 'in_refund', 'out_receipt', 'in_receipt')">-->
<!--          <field string="Delivery" name="delivery_count" widget="statinfo"/>-->
<!--        </button>-->
<!--      </div>-->
<!--    </field>-->
<!--  </record>-->
<!--</odoo>-->
